-- =====================================================
-- TEST SCRIPT: H·ªÜ TH·ªêNG PROMOTION HO√ÄN CH·ªàNH
-- =====================================================
-- Ch·∫°y script n√†y ƒë·ªÉ ki·ªÉm tra to√†n b·ªô h·ªá th·ªëng promotion
-- Sau khi ch·∫°y, test c√°c trang promotion

-- =====================================================
-- 1. KI·ªÇM TRA T√ÄI KHO·∫¢N CUSTOMER C√ì TH·ªÇ LOGIN
-- =====================================================
SELECT '=== 1. T√ÄI KHO·∫¢N CUSTOMER ===' as test_section;

SELECT 
    a.accountID,
    a.username,
    a.email,
    a.status,
    r.roleName,
    c.customerID,
    c.fullName,
    c.phone,
    CASE 
        WHEN a.status = 'VERIFIED' THEN '‚úÖ C√≥ th·ªÉ login'
        ELSE '‚ùå Kh√¥ng th·ªÉ login'
    END as login_status
FROM Account a
JOIN Role r ON a.roleID = r.roleID
LEFT JOIN Customer c ON a.accountID = c.accountID
WHERE r.roleName = 'CUSTOMER'
ORDER BY a.accountID;

-- =====================================================
-- 2. KI·ªÇM TRA PROMOTION C√ì S·∫¥N
-- =====================================================
SELECT '=== 2. PROMOTION C√ì S·∫¥N ===' as test_section;

SELECT 
    p.promotionID,
    p.title,
    p.promotionCode,
    p.discountType,
    p.discountValue,
    p.startDate,
    p.endDate,
    p.status,
    p.customerCondition,
    p.usageLimitPerCustomer,
    CASE 
        WHEN p.status = 'ACTIVE' AND p.startDate <= CURDATE() AND p.endDate >= CURDATE() 
        THEN '‚úÖ C√≥ th·ªÉ s·ª≠ d·ª•ng'
        ELSE '‚ùå Kh√¥ng th·ªÉ s·ª≠ d·ª•ng'
    END as availability_status
FROM Promotion p
ORDER BY p.promotionID;

-- =====================================================
-- 3. KI·ªÇM TRA PROMOTION USAGE
-- =====================================================
SELECT '=== 3. PROMOTION USAGE ===' as test_section;

SELECT 
    pu.promotionUsageID,
    pu.customerID,
    pu.promotionID,
    pu.usageDate,
    p.promotionCode,
    p.title,
    c.fullName as customerName
FROM PromotionUsage pu
JOIN Promotion p ON pu.promotionID = p.promotionID
JOIN Customer c ON pu.customerID = c.customerID
ORDER BY pu.usageDate DESC
LIMIT 10;

-- =====================================================
-- 4. KI·ªÇM TRA CUSTOMER PROMOTION SUMMARY
-- =====================================================
SELECT '=== 4. CUSTOMER PROMOTION SUMMARY ===' as test_section;

-- Test v·ªõi customer ID = 1
SELECT 
    c.customerID,
    c.fullName,
    COUNT(pu.promotionUsageID) as total_usage,
    COUNT(DISTINCT pu.promotionID) as unique_promotions_used
FROM Customer c
LEFT JOIN PromotionUsage pu ON c.customerID = pu.customerID
WHERE c.customerID = 1
GROUP BY c.customerID, c.fullName;

-- =====================================================
-- 5. KI·ªÇM TRA PROMOTION IMAGE
-- =====================================================
SELECT '=== 5. PROMOTION IMAGE ===' as test_section;

SELECT 
    promotionID,
    title,
    imageURL,
    CASE 
        WHEN imageURL IS NULL THEN '‚ùå Kh√¥ng c√≥ ·∫£nh'
        WHEN imageURL LIKE 'http%' THEN '‚úÖ External URL'
        WHEN imageURL LIKE '/%' THEN '‚úÖ Internal Path'
        ELSE '‚ö†Ô∏è Other Format'
    END as image_status
FROM Promotion
ORDER BY promotionID;

-- =====================================================
-- 6. KI·ªÇM TRA PROMOTION M·ªöI (7 NG√ÄY QUA)
-- =====================================================
SELECT '=== 6. PROMOTION M·ªöI ===' as test_section;

SELECT 
    p.promotionID,
    p.title,
    p.promotionCode,
    p.createdDate,
    DATEDIFF(CURDATE(), p.createdDate) as days_since_created,
    CASE 
        WHEN DATEDIFF(CURDATE(), p.createdDate) <= 7 THEN 'üÜï M·ªõi'
        ELSE 'üìÖ C≈©'
    END as new_status
FROM Promotion p
WHERE p.createdDate >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
ORDER BY p.createdDate DESC;

-- =====================================================
-- 7. KI·ªÇM TRA PROMOTION CONDITIONS
-- =====================================================
SELECT '=== 7. PROMOTION CONDITIONS ===' as test_section;

SELECT 
    p.promotionID,
    p.title,
    p.promotionCode,
    p.minimumAppointmentValue,
    p.customerCondition,
    p.usageLimitPerCustomer,
    CASE 
        WHEN p.minimumAppointmentValue IS NULL OR p.minimumAppointmentValue = 0 
        THEN '‚úÖ Kh√¥ng c√≥ ƒëi·ªÅu ki·ªán gi√° tr·ªã t·ªëi thi·ªÉu'
        ELSE CONCAT('üí∞ T·ªëi thi·ªÉu: ', FORMAT(p.minimumAppointmentValue, 0), '‚Ç´')
    END as minimum_value_status,
    CASE 
        WHEN p.customerCondition = 'INDIVIDUAL' THEN 'üë§ Kh√°ch h√†ng c√° nh√¢n'
        WHEN p.customerCondition = 'COUPLE' THEN 'üíë Kh√°ch h√†ng ƒëi c·∫∑p'
        WHEN p.customerCondition = 'GROUP' THEN 'üë• Kh√°ch h√†ng ƒëi nh√≥m'
        ELSE 'üåç T·∫•t c·∫£ kh√°ch h√†ng'
    END as customer_condition_status
FROM Promotion p
ORDER BY p.promotionID;

-- =====================================================
-- 8. TEST DATA CHO CUSTOMER LOGIN
-- =====================================================
SELECT '=== 8. TEST DATA CHO CUSTOMER LOGIN ===' as test_section;

-- T·∫°o test customer n·∫øu ch∆∞a c√≥
INSERT IGNORE INTO Account (username, password, email, status, roleID) 
VALUES ('testcustomer', '$2a$10$N.zmdr9k7uOCQb376NoUnuTJ8iAt6Z5EHsM8lE9lBOsl7iKTVEFDa', 'testcustomer@example.com', 'VERIFIED', 6);

INSERT IGNORE INTO Customer (accountID, fullName, phone, address, dateOfBirth, gender, email) 
SELECT a.accountID, 'Test Customer', '0123456789', 'Test Address', '1990-01-01', 'MALE', a.email
FROM Account a 
WHERE a.username = 'testcustomer' AND NOT EXISTS (SELECT 1 FROM Customer c WHERE c.accountID = a.accountID);

-- Hi·ªÉn th·ªã test account
SELECT 
    'Test Account Info:' as info,
    a.username,
    a.password,
    a.email,
    a.status,
    r.roleName,
    c.customerID,
    c.fullName
FROM Account a
JOIN Role r ON a.roleID = r.roleID
LEFT JOIN Customer c ON a.accountID = c.accountID
WHERE a.username = 'testcustomer';

-- =====================================================
-- 9. KI·ªÇM TRA ROLE PERMISSIONS
-- =====================================================
SELECT '=== 9. ROLE PERMISSIONS ===' as test_section;

SELECT 
    r.roleID,
    r.roleName,
    r.description,
    CASE 
        WHEN r.roleName = 'CUSTOMER' THEN '‚úÖ C√≥ th·ªÉ access /promotions/*'
        WHEN r.roleName IN ('ADMIN', 'MANAGER', 'MARKETING') THEN '‚úÖ C√≥ th·ªÉ qu·∫£n l√Ω promotion'
        ELSE '‚ùå Kh√¥ng c√≥ quy·ªÅn promotion'
    END as promotion_permission
FROM Role r
ORDER BY r.roleID;

-- =====================================================
-- 10. SUMMARY REPORT
-- =====================================================
SELECT '=== 10. SUMMARY REPORT ===' as test_section;

SELECT 
    'T·ªïng s·ªë promotion' as metric,
    COUNT(*) as value
FROM Promotion
UNION ALL
SELECT 
    'Promotion ƒëang active',
    COUNT(*)
FROM Promotion 
WHERE status = 'ACTIVE' AND startDate <= CURDATE() AND endDate >= CURDATE()
UNION ALL
SELECT 
    'Customer c√≥ th·ªÉ login',
    COUNT(*)
FROM Account a
JOIN Role r ON a.roleID = r.roleID
WHERE r.roleName = 'CUSTOMER' AND a.status = 'VERIFIED'
UNION ALL
SELECT 
    'Promotion c√≥ ·∫£nh',
    COUNT(*)
FROM Promotion 
WHERE imageURL IS NOT NULL;

-- =====================================================
-- H∆Ø·ªöNG D·∫™N TEST
-- =====================================================
SELECT '=== H∆Ø·ªöNG D·∫™N TEST ===' as test_section;

SELECT '1. Login v·ªõi customer account:' as step;
SELECT '   - Username: testcustomer' as detail;
SELECT '   - Password: 123456' as detail;
SELECT '' as step;

SELECT '2. Test c√°c trang promotion:' as step;
SELECT '   - /promotions/available' as detail;
SELECT '   - /promotions/my-promotions' as detail;
SELECT '   - /promotions/notification' as detail;
SELECT '' as step;

SELECT '3. Test c√°c t√≠nh nƒÉng:' as step;
SELECT '   - Copy promotion code' as detail;
SELECT '   - Share promotion' as detail;
SELECT '   - View promotion details' as detail;
SELECT '' as step;

SELECT '4. Ki·ªÉm tra l·ªói:' as step;
SELECT '   - Kh√¥ng c√≤n l·ªói 500' as detail;
SELECT '   - JSP parse ƒë√∫ng' as detail;
SELECT '   - JavaScript ho·∫°t ƒë·ªông' as detail; 